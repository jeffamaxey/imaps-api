# Generated by Django 3.2 on 2022-01-15 01:19

from django.db import migrations, models
import django.db.models.deletion
import time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_nextflow', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('created', models.IntegerField(default=time.time)),
                ('modified', models.IntegerField(default=time.time)),
                ('description', models.TextField(blank=True, default='')),
                ('private', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'collections',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.IntegerField(default=time.time)),
                ('modified', models.IntegerField(default=time.time)),
                ('started', models.IntegerField(null=True)),
                ('finished', models.IntegerField(null=True)),
                ('private', models.BooleanField(default=True)),
                ('params', models.TextField(default='{}')),
                ('data_params', models.TextField(default='{}')),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='analysis.collection')),
                ('execution', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job', to='django_nextflow.execution')),
                ('pipeline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='django_nextflow.pipeline')),
            ],
            options={
                'db_table': 'jobs',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('created', models.IntegerField(default=time.time)),
                ('modified', models.IntegerField(default=time.time)),
                ('private', models.BooleanField(default=True)),
                ('source', models.CharField(max_length=100)),
                ('organism', models.CharField(max_length=100)),
                ('qc_pass', models.BooleanField(null=True)),
                ('qc_message', models.CharField(max_length=100)),
                ('pi_name', models.CharField(max_length=100)),
                ('annotator_name', models.CharField(max_length=100)),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='analysis.collection')),
                ('initiator', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sample', to='django_nextflow.data')),
            ],
            options={
                'db_table': 'samples',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SampleUserLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.IntegerField(choices=[[1, 'access'], [2, 'edit'], [3, 'share']], default=1)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.sample')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
            options={
                'db_table': 'sample_user_links',
            },
        ),
        migrations.AddField(
            model_name='sample',
            name='users',
            field=models.ManyToManyField(related_name='samples', through='analysis.SampleUserLink', to='core.User'),
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250)),
                ('url', models.URLField(blank=True, null=True)),
                ('year', models.IntegerField()),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papers', to='analysis.collection')),
            ],
            options={
                'db_table': 'papers',
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='JobUserLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.IntegerField(choices=[[1, 'access'], [2, 'edit'], [3, 'share']], default=1)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
            options={
                'db_table': 'job_user_links',
            },
        ),
        migrations.AddField(
            model_name='job',
            name='sample',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='analysis.sample'),
        ),
        migrations.AddField(
            model_name='job',
            name='users',
            field=models.ManyToManyField(related_name='jobs', through='analysis.JobUserLink', to='core.User'),
        ),
        migrations.CreateModel(
            name='DataUserLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.IntegerField(choices=[[1, 'access'], [2, 'edit'], [3, 'share']], default=1)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_nextflow.data')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
            options={
                'db_table': 'data_user_links',
            },
        ),
        migrations.CreateModel(
            name='DataLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(default=True)),
                ('is_annotation', models.BooleanField(default=False)),
                ('is_multiplexed', models.BooleanField(default=False)),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='analysis.collection')),
                ('data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='link', to='django_nextflow.data')),
            ],
            options={
                'db_table': 'data_links',
            },
        ),
        migrations.CreateModel(
            name='CollectionUserLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.IntegerField(choices=[[1, 'access'], [2, 'edit'], [3, 'share'], [4, 'own']], default=1)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.collection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.user')),
            ],
            options={
                'db_table': 'collection_user_links',
            },
        ),
        migrations.CreateModel(
            name='CollectionGroupLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.IntegerField(choices=[[1, 'access'], [2, 'edit'], [3, 'share']], default=1)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analysis.collection')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.group')),
            ],
            options={
                'db_table': 'collection_group_links',
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='groups',
            field=models.ManyToManyField(related_name='collections', through='analysis.CollectionGroupLink', to='core.Group'),
        ),
        migrations.AddField(
            model_name='collection',
            name='users',
            field=models.ManyToManyField(related_name='collections', through='analysis.CollectionUserLink', to='core.User'),
        ),
    ]
